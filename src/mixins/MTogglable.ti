--[[
    A small mixin to avoid rewriting code used by nodes that can be toggled on or off.
]]

abstract class MTogglable {
    toggled = false;
}

--[[
    @instance
    @desc 'toggled' to the opposite of what it currently is (toggles)
]]
function MTogglable:toggle( ... )
    self:setToggled( not self.toggled, ... )
end

--[[
    @instance
    @desc Sets toggled to 'toggled' and changed to 'true' when the 'toggled' param doesn't match the current value of toggled.
    @param <boolean - toggled>, [vararg - onToggleArguments]
]]
function MTogglable:setToggled( toggled, ... )
    if self.toggled ~= toggled then
        if self:can "onToggle" then
            self:onToggle( ... )
        end

        self.raw.toggled = toggled
        self.changed = true
    end
end
